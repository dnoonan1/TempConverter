/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tempconverter;

import javax.swing.JOptionPane;
import strategy.temperaturescale.*;

/**
 *
 * @author Dan
 */
public class TempConverterWindow2 extends javax.swing.JFrame {
    
    private static final TemperatureScale KELVIN = new KelvinScale();
    private static final TemperatureScale CELSIUS = new CelsiusScale();
    private static final TemperatureScale FAHRENHEIT = new FahrenheitScale();
    
    private TemperatureScale originalScale;
    private TemperatureScale targetScale;
    
    TempConversionService2 conversionService;
    
    private static final String ERROR_WINDOW_TITLE = "Error";
    private static final String INPUT_FORMAT_MSG = "You must enter a decimal "
            + "number for the input temperature.";
    
    /**
     * Creates new form TempConverter
     */
    public TempConverterWindow2() {
        initComponents();
        originalScale = CELSIUS;
        targetScale = FAHRENHEIT;
        conversionService = new TempConversionService2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgOriginalScale = new javax.swing.ButtonGroup();
        bgTargetScale = new javax.swing.ButtonGroup();
        lblTemperature = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        lblDegrees = new javax.swing.JLabel();
        btnConvert = new javax.swing.JButton();
        lblOutputMsg = new javax.swing.JLabel();
        pnlFrom = new javax.swing.JPanel();
        rbCelsius = new javax.swing.JRadioButton();
        rbFahrenheit = new javax.swing.JRadioButton();
        rbKelvin = new javax.swing.JRadioButton();
        pnlTo = new javax.swing.JPanel();
        rbTargetCelsius = new javax.swing.JRadioButton();
        rbTargetFahrenheit = new javax.swing.JRadioButton();
        rbTargetKelvin = new javax.swing.JRadioButton();
        pnlPresets = new javax.swing.JPanel();
        btnAbsoluteZero = new javax.swing.JButton();
        btnFreezingPoint = new javax.swing.JButton();
        btnBoilingPoint = new javax.swing.JButton();
        btnAbsoluteHot = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Temperature Converter");

        lblTemperature.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTemperature.setText("Temperature:");

        txtTemperature.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTemperature.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTemperature.setText("0");
        txtTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperatureActionPerformed(evt);
            }
        });

        lblDegrees.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDegrees.setText("degrees");

        btnConvert.setText("Convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        lblOutputMsg.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblOutputMsg.setForeground(new java.awt.Color(0, 51, 255));
        lblOutputMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        pnlFrom.setBorder(javax.swing.BorderFactory.createTitledBorder("From"));

        bgOriginalScale.add(rbCelsius);
        rbCelsius.setSelected(true);
        rbCelsius.setText("Celsius");
        rbCelsius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCelsiusActionPerformed(evt);
            }
        });

        bgOriginalScale.add(rbFahrenheit);
        rbFahrenheit.setText("Fahrenheit");
        rbFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFahrenheitActionPerformed(evt);
            }
        });

        bgOriginalScale.add(rbKelvin);
        rbKelvin.setText("Kelvin");
        rbKelvin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKelvinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFromLayout = new javax.swing.GroupLayout(pnlFrom);
        pnlFrom.setLayout(pnlFromLayout);
        pnlFromLayout.setHorizontalGroup(
            pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFromLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbCelsius)
                    .addComponent(rbFahrenheit)
                    .addComponent(rbKelvin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlFromLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rbCelsius, rbFahrenheit, rbKelvin});

        pnlFromLayout.setVerticalGroup(
            pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFromLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbCelsius)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbFahrenheit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbKelvin)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pnlTo.setBorder(javax.swing.BorderFactory.createTitledBorder("To"));

        bgTargetScale.add(rbTargetCelsius);
        rbTargetCelsius.setText("Celsius");
        rbTargetCelsius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTargetCelsiusActionPerformed(evt);
            }
        });

        bgTargetScale.add(rbTargetFahrenheit);
        rbTargetFahrenheit.setSelected(true);
        rbTargetFahrenheit.setText("Fahrenheit");
        rbTargetFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTargetFahrenheitActionPerformed(evt);
            }
        });

        bgTargetScale.add(rbTargetKelvin);
        rbTargetKelvin.setText("Kelvin");
        rbTargetKelvin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTargetKelvinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlToLayout = new javax.swing.GroupLayout(pnlTo);
        pnlTo.setLayout(pnlToLayout);
        pnlToLayout.setHorizontalGroup(
            pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlToLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbTargetCelsius)
                    .addComponent(rbTargetFahrenheit)
                    .addComponent(rbTargetKelvin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlToLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rbTargetCelsius, rbTargetFahrenheit, rbTargetKelvin});

        pnlToLayout.setVerticalGroup(
            pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlToLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbTargetCelsius)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbTargetFahrenheit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbTargetKelvin)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pnlPresets.setBorder(javax.swing.BorderFactory.createTitledBorder("Presets"));

        btnAbsoluteZero.setText("Absolute Zero");
        btnAbsoluteZero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbsoluteZeroActionPerformed(evt);
            }
        });

        btnFreezingPoint.setText("Freezing Point");
        btnFreezingPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFreezingPointActionPerformed(evt);
            }
        });

        btnBoilingPoint.setText("Boiling Point");
        btnBoilingPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoilingPointActionPerformed(evt);
            }
        });

        btnAbsoluteHot.setText("Absolute Hot");
        btnAbsoluteHot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbsoluteHotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPresetsLayout = new javax.swing.GroupLayout(pnlPresets);
        pnlPresets.setLayout(pnlPresetsLayout);
        pnlPresetsLayout.setHorizontalGroup(
            pnlPresetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPresetsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPresetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPresetsLayout.createSequentialGroup()
                        .addComponent(btnFreezingPoint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBoilingPoint))
                    .addGroup(pnlPresetsLayout.createSequentialGroup()
                        .addComponent(btnAbsoluteZero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAbsoluteHot)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPresetsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAbsoluteHot, btnAbsoluteZero, btnBoilingPoint, btnFreezingPoint});

        pnlPresetsLayout.setVerticalGroup(
            pnlPresetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPresetsLayout.createSequentialGroup()
                .addGroup(pnlPresetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFreezingPoint)
                    .addComponent(btnBoilingPoint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPresetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAbsoluteZero)
                    .addComponent(btnAbsoluteHot))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(lblTemperature)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDegrees, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOutputMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(btnConvert))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(pnlFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(pnlPresets, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDegrees))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPresets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConvert)
                .addGap(25, 25, 25)
                .addComponent(lblOutputMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblDegrees, lblTemperature, txtTemperature});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTemperature(double degrees) {
        txtTemperature.setText(String.format("%.2f", degrees));
    }
    
    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
        
//        if (rbCelsius.isSelected()) {
//            originalScale = CELSIUS;
//        } else if (rbFahrenheit.isSelected()) {
//            originalScale = FAHRENHEIT;
//        } else { // rbKelvin.isSelected()
//            originalScale = KELVIN;
//        }
//        
//        if (rbTargetCelsius.isSelected()) {
//            targetScale = CELSIUS;
//        } else if (rbTargetFahrenheit.isSelected()) {
//            targetScale = FAHRENHEIT;
//        } else { // rbTargetKelvin.isSelected()
//            targetScale = KELVIN;
//        }
//        
        conversionService.setOriginalAndTarget(originalScale, targetScale);
        
        try {
            double originalDegrees = Double.parseDouble(txtTemperature.getText());
            double targetDegrees = conversionService.getConverted(originalDegrees);
            String text = String.format("%.2f %s = %.2f %s",
                    originalDegrees, originalScale.getAbbreviatedUnit(), 
                    targetDegrees, targetScale.getAbbreviatedUnit());
            lblOutputMsg.setText(text);
        } catch (NumberFormatException nf) {
            JOptionPane.showMessageDialog(this, INPUT_FORMAT_MSG,
                    ERROR_WINDOW_TITLE, JOptionPane.ERROR_MESSAGE);
        } catch (TemperatureOutOfRangeException tr) {
            JOptionPane.showMessageDialog(this,
                    String.format("You must enter a temperature between "
                            + "%.2f %s and %.2e %s",
                            originalScale.absoluteZero(),
                            originalScale.getAbbreviatedUnit(),
                            originalScale.absoluteHot(),
                            originalScale.getAbbreviatedUnit()
                    ),
                    ERROR_WINDOW_TITLE, JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnConvertActionPerformed

    private void txtTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemperatureActionPerformed

    private void btnFreezingPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFreezingPointActionPerformed
        setTemperature(originalScale.freezingPoint());
    }//GEN-LAST:event_btnFreezingPointActionPerformed

    private void btnBoilingPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoilingPointActionPerformed
        setTemperature(originalScale.boilingPoint());
    }//GEN-LAST:event_btnBoilingPointActionPerformed

    private void btnAbsoluteHotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbsoluteHotActionPerformed
        txtTemperature.setText(String.format("%.2e", originalScale.absoluteHot()));
    }//GEN-LAST:event_btnAbsoluteHotActionPerformed

    private void btnAbsoluteZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbsoluteZeroActionPerformed
        setTemperature(originalScale.absoluteZero());
    }//GEN-LAST:event_btnAbsoluteZeroActionPerformed

    private void rbCelsiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCelsiusActionPerformed
        originalScale = CELSIUS;
    }//GEN-LAST:event_rbCelsiusActionPerformed

    private void rbFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFahrenheitActionPerformed
        originalScale = FAHRENHEIT;
    }//GEN-LAST:event_rbFahrenheitActionPerformed

    private void rbKelvinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKelvinActionPerformed
        originalScale = KELVIN;
    }//GEN-LAST:event_rbKelvinActionPerformed

    private void rbTargetCelsiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTargetCelsiusActionPerformed
        originalScale = CELSIUS;
    }//GEN-LAST:event_rbTargetCelsiusActionPerformed

    private void rbTargetFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTargetFahrenheitActionPerformed
        originalScale = FAHRENHEIT;
    }//GEN-LAST:event_rbTargetFahrenheitActionPerformed

    private void rbTargetKelvinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTargetKelvinActionPerformed
        originalScale = KELVIN;
    }//GEN-LAST:event_rbTargetKelvinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TempConverterWindow2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TempConverterWindow2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TempConverterWindow2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TempConverterWindow2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TempConverterWindow2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgOriginalScale;
    private javax.swing.ButtonGroup bgTargetScale;
    private javax.swing.JButton btnAbsoluteHot;
    private javax.swing.JButton btnAbsoluteZero;
    private javax.swing.JButton btnBoilingPoint;
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btnFreezingPoint;
    private javax.swing.JLabel lblDegrees;
    private javax.swing.JLabel lblOutputMsg;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JPanel pnlFrom;
    private javax.swing.JPanel pnlPresets;
    private javax.swing.JPanel pnlTo;
    private javax.swing.JRadioButton rbCelsius;
    private javax.swing.JRadioButton rbFahrenheit;
    private javax.swing.JRadioButton rbKelvin;
    private javax.swing.JRadioButton rbTargetCelsius;
    private javax.swing.JRadioButton rbTargetFahrenheit;
    private javax.swing.JRadioButton rbTargetKelvin;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables

}
